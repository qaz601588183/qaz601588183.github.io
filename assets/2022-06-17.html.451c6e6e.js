import{_ as n,o as a,c as s,d as e}from"./app.127dbe13.js";const p={},t=e(`<h2 id="\u5982\u4F55\u5B9E\u73B0-a-1-a-2-a-3" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5B9E\u73B0-a-1-a-2-a-3" aria-hidden="true">#</a> \u5982\u4F55\u5B9E\u73B0(a == 1 &amp;&amp; a == 2 &amp;&amp; a == 3)?</h2><p>\u8FD9\u91CC\u8003\u5BDF == \u8FD0\u7B97\u7B26\u7684\u7279\u6027\uFF08\u539F\u59CB\u7C7B\u578B\u7684\u503C\u5373\u4E3A\u539F\u59CB\u503C\uFF09<br> 1.\u7279\u6B8A\u60C5\u51B5:\u4F8B\u5982 undefined == null ; NaN != NaN ;<br> 2.\u7C7B\u578B\u76F8\u540C\u60C5\u51B5: \u76F4\u63A5\u6BD4\u8F83\u503C;<br> 3.\u7C7B\u578B\u4E0D\u540C\u60C5\u51B5: \u5982\u679C\u5747\u4E3A\u539F\u59CB\u503C\u7684\u8BDD\u8F6C\u6362\u4E3A\u6570\u503C\u7C7B\u578B\u6BD4\u8F83 1 == &#39;1&#39;,\u5982\u679C\u4E00\u7AEF\u4E3A\u539F\u59CB\u503C\u4E00\u7AEF\u4E3A\u5BF9\u8C61\u7684\u8BDD\u4F1A\u5C06\u5BF9\u8C61\u8F6C\u6362\u4E3A\u539F\u59CB\u503C=&gt;\u5148\u8C03\u7528valueOf\u65B9\u6CD5=&gt;\u65E0\u6CD5\u8F6C\u6362\u4E3A\u539F\u59CB\u503C\u518D\u8C03\u7528toString\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token function-variable function">valueOf</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6BCF\u65E5\u4E00\u7EC3-\u4E8C\u5206\u67E5\u627E" tabindex="-1"><a class="header-anchor" href="#\u6BCF\u65E5\u4E00\u7EC3-\u4E8C\u5206\u67E5\u627E" aria-hidden="true">#</a> \u6BCF\u65E5\u4E00\u7EC3\uFF1A\u4E8C\u5206\u67E5\u627E</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span> <span class="token parameter">nums</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">target</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token keyword">var</span> <span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        nums<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>item <span class="token operator">===</span> target<span class="token punctuation">)</span><span class="token punctuation">{</span>
                index <span class="token operator">=</span> i
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> index
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),o=[t];function c(i,l){return a(),s("div",null,o)}var r=n(p,[["render",c],["__file","2022-06-17.html.vue"]]);export{r as default};
